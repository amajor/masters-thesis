% =============================================================================
% =  Scholarly Articles
% =============================================================================

Provided by Dr. Omari
@misc{omari:2018,
  title={Enabling Empirical Research: A Corpus of Large-Scale Python Systems},
  author={Safwan Omari and Gina Martinez},
  year={2018}
}

@article{baggen:2012,
  title={Standardized code quality benchmarking for improving software maintainability},
  author={Robert Baggen and José and Pedro Correia and Katrin Schill and Joost Visser},
  journal={Software Qual J},
  volume={20},
  pages={287-307},
  year={2012},
  publisher={Springer Science+Business Media}
}

@article{piantadosi:2020,
  title={How does code readability change during software evolution?},
  author={Valentina Piantadosi and Fabiana Fierro and Simone Scalabrino and Alexander Serebrenik and Rocco Oliveto},
  journal={Software Qual J},
  volume={25},
  pages={5374-5412},
  year={2020},
  publisher={Springer Science+Business Media, LLC}
}

@article{zhou:2020,
  title={Measurement and refactoring for package structure based on complex network},
  author={Yangxi Zhou and Yanran Mi and Yan Zhu and Liangyu Chen},
  journal={Applied Network Science},
  volume={5},
  number={50},
  year={2020},
  publisher={Springer Open}
}

@article{wedyan:2020,
  title={Impact of design patterns on software quality: a systematic literature review},
  author={Fadi Wedyan and Somia Abufakher},
  journal={IET Software},
  volume={14},
  number={1},
  year={2020},
  publisher={The Institution of Engineering and Technology}
}

@article{baishakhi:2017,
  title={A Large-Scale Study of Programming Languages and Code Quality in GitHub},
  author={Baishakhi Ray and Daryl Posnett and Premkumar Devanbu and Vladimir Filkov},
  journal={COMMUNICATIONS OF THE ACM},
  volume={60},
  number={10},
  pages={91--100},
  year={2017}
}

@article{janke:2003,
  author = {Melis Dagpinar and Jens H. Janke},
  year = {2003},
  month = {12},
  pages = {155-164},
  title = {Predicting Maintainability with Object-Oriented Metrics - An Empirical Comparison},
  isbn = {0-7695-2027-8},
  journal = {Reverse Engineering - Working Conference Proceedings},
  doi = {10.1109/WCRE.2003.1287246}
}

@misc{coulin:2019,
  title={SOFTWARE ARCHITECTURE METRICS: A LITERATURE REVIEW},
  author={Théo Coulin and Maxence Detante and William Mouchère and Fabio Petrillo},
  year={2019},
  publisher={ResearchGate}
}

@article{yu:2013,
  author = {Liguo Yu and Alok Mishra},
  year = {2013},
  title = {An Empirical Study of Lehman's Law on Software Quality Evolution},
  journal = {Int J Software Informatics},
  volume={7},
  number={3},
  pages={469-481}
}

@article{lehman:1980,
  author = {Meir M. Lehman},
  year = {1980},
  month = {September},
  title = {Programs, Life Cycles, and Laws of Software Evolution},
  journal = {Proceedings of the IEEEs},
  volume={68},
  number={9},
  pages={1060-1076}
}

@article{gupta:2021,
  author = {Shikha Gupta and Anuradha Chug},
  year = {2021},
  month = {October},
  title = {An Extensive Analysis of Machine Learning Based Boosting Algorithms for Software Maintainability Prediction},
  journal = {International Journal of Interactive Multimedia and Artificial Intelligence},
  volume={7},
  number={2},
  pages={89-109}
}

@article{ieee:1219,
  author = {},
  journal = {IEEE Std 1219-1993},
  title = {IEEE Standard for Software Maintenance},
  year = {1993},
  pages = {1-45},
  doi = {10.1109/IEEESTD.1993.115570}
}

@article{alsolai:2019,
  author = {Hadeel Alsolai and Marc Roper},
  year = {2019},
  title = {A Systematic Literature Review of Machine Learning Techniques for Software Maintainability Prediction},
  journal = {Information and Software Technology}
}

@article{steinbruckner:2012,
  author = {Frank Steinbrückner and Claus Lewerentz},
  year = {2012},
  title = {Understanding software evolution with software cities},
  journal = {Information Visualization},
  volume={12},
  number={2},
  pages={200-216}
}

@article{herranz:2019,
  author = {Eduardo Herranz and Javier García Guzmán and Antonio de Amescua-Seco and Xabier Larrucea},
  year = {2019},
  title = {Gamification for software process improvement: a practical approach},
  journal = {IET Software},
  volume={13},
  number={2},
  pages={112-121}
}

@article{adewumi:2016,
  author = {Adewole Adewumi and Sanjay Misra and Nicholas Omoregbe and Broderick Crawford and Ricardo Soto},
  year = {2016},
  title = {A systematic literature review of open source software quality assessment models},
  journal = {SpringerPlus},
  volume={5},
  number={1936}
}

@article{borrego:2017,
  author = {Gilberto Borrego and Alberto L. Morán and Ramón René Palacio Cinco and Oscar Mario Rodríguez-Elias and Eloísa García-Canseco},
  year = {2017},
  title = {Review of approaches to manage architectural knowledge in Agile Global Software Development},
  journal = {IET Software},
  volume={11},
  number={3},
  pages={77-88}
}

@inproceedings{levy:2009,
  author = {Meira Levy and Orit Hazzan},
  booktitle = {2009 ICSE Workshop on Cooperative and Human Aspects on Software Engineering},
  title = {Knowledge management in practice: The case of agile software development},
  year = {2009},
  pages = {60-65},
  doi = {10.1109/CHASE.2009.5071412}
}

@article{bjornson:2008,
  title = {Knowledge management in software engineering: A systematic review of studied concepts, findings and research methods used},
  journal = {Information and Software Technology},
  volume = {50},
  number = {11},
  pages = {1055-1068},
  year = {2008},
  issn = {0950-5849},
  doi = {https://doi.org/10.1016/j.infsof.2008.03.006},
  url = {https://www.sciencedirect.com/science/article/pii/S0950584908000487},
  author = {Finn Olav Bjørnson and Torgeir Dingsøyr},
  keywords = {Software engineering, Knowledge management, Learning software organization, Software process improvement, Systematic review},
  abstract = {Software engineering is knowledge-intensive work, and how to manage software engineering knowledge has received much attention. This systematic review identifies empirical studies of knowledge management initiatives in software engineering, and discusses the concepts studied, the major findings, and the research methods used. Seven hundred and sixty-two articles were identified, of which 68 were studies in an industry context. Of these, 29 were empirical studies and 39 reports of lessons learned. More than half of the empirical studies were case studies. The majority of empirical studies relate to technocratic and behavioural aspects of knowledge management, while there are few studies relating to economic, spatial and cartographic approaches. A finding reported across multiple papers was the need to not focus exclusively on explicit knowledge, but also consider tacit knowledge. We also describe implications for research and for practice.}
}

@article{martin:2000,
  author = {Robert C. Martin},
  year = {2000},
  title = {Design Principles and Design Patterns},
  journal = {Object Mentor}
}

% (Haaland et al. 2010) --> Haaland K, Groven AK, Regnesentral N, Glott R, Tannenberg A, FreeCode AS (2010) Free/libre open source quality models—a comparison between two approaches. In: 4th FLOS international workshop on Free/Libre/Open Source Software, July 2010
@inproceedings{haaland:2010,
  title = {Free/Libre Open Source Quality Models-a comparison between two approaches},
  booktitle = {},
  author = {Kirsten Haaland and Arne-Kristian Groven},
  year = {2010}
}

% (Samoladas et al. 2008) --> Samoladas I, Gousios G, Spinellis D, Stamelos I (2008) The SQO-OSS quality model: measurement based open source software evaluation. In: IFIP International Conference on Open Source Systems. Springer, Milano, pp 237–248
@article{samoladas:2008,
  author = {Ioannis Samoladas and Georgios Gousios and Diomidis Spinellis and Ioannis Stamelos},
  year = {2008},
  title = {The SQO-OSS Quality Model: Measurement Based Open Source Software Evaluation},
  journal = {IFIP International Federation for Information Processing},
  volume={275},
  pages={237-248}
}

% =============================================================================
% =  Books
% =============================================================================

@book{book:software-architecture-in-practice,
  title = {Software Architecture in Practice: Third Edition},
  author = {Len Bass and Paul Clements and Rick Kazman},
  year = {2012},
  publisher = {Addison-Wesley Professional}
}

@book{brooks:mythical,
  title = {The Mythical Man-Month},
  subtitle = {Essays on Software Engineering},
  author = {Frederick Brooks},
  year = {1975},
  publisher = {Addison-Wesley},
}

% =============================================================================
% =  Online Resources
% =============================================================================

@misc{pylint:main,
  title        = "Pylint",
  author       = "Logilab and contributors",
  howpublished = "Logilab",
  year         = "2020",
  url          = "https://pylint.org/",
  note         = "\url{https://pylint.org/} [Online; accessed 14-December-2021]"
}

@misc{pylint:score,
  title = "Pylint features",
  subtitle = "Reports Options",
  author = "Logilab, PyCQA and contributors",
  howpublished = "Logilab and PyCQA",
  year = "2021",
  url = "https://pylint.pycqa.org/en/latest/technical_reference/features.html#reports-options",
  note = "\url{https://pylint.pycqa.org/en/latest/technical_reference/features.html#reports-options} [Online; accessed 14-December-2021]"
}

@misc{pylint:refactor,
  title = "Pylint features",
  subtitle = "Refactoring Checker (and following)",
  author = "Logilab, PyCQA and contributors",
  howpublished = "Logilab and PyCQA",
  year = "2021",
  url = "https://pylint.pycqa.org/en/latest/technical_reference/features.html#refactoring-checker",
  note = "\url{https://pylint.pycqa.org/en/latest/technical_reference/features.html#refactoring-checker} [Online; accessed 14-December-2021]"
}

@misc{pylint:pep8,
  title        = "PEP 8 -- Style Guide for Python Code",
  author       = "Python Software Foundation and contributors",
  howpublished = "Heroku Application",
  year         = "2021",
  url          = "https://www.python.org/dev/peps/pep-0008/",
  note         = "\url{https://www.python.org/dev/peps/pep-0008/} [Online; accessed 14-December-2021]",
}

@misc{iso/iec:25010:2011,
  title={ISO/IEC 25010:2011: Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models},
  author={Technical Committees: ISO/IEC JTC 1/SC 7 and Software and systems engineering},
  howpublished={ISO},
  year={2011},
  url={https://www.iso.org/obp/ui/#iso:std:iso-iec:25010:ed-1:v1:en},
  note="\url{https://www.iso.org/obp/ui/#iso:std:iso-iec:25010:ed-1:v1:en} [Online; accessed 14-December-2021]"
}

@misc{vandeursen:2014,
  author = {Arie Van Deursen},
  title = {Think Twice Before Using the ``Maintainability Index''},
  year = {2014},
  url = "https://avandeursen.com/2014/08/29/think-twice-before-using-the-maintainability-index/",
  note = "\url{https://avandeursen.com/2014/08/29/think-twice-before-using-the-maintainability-index/} [Online; accessed 23-Jan-2022]"
}

@misc{data:sympy-docs,
  author = {SymPy Development Team},
  title = {SymPy User's Guide},
  year = {2019},
  url = "https://web.archive.org/web/20200403130424/https://docs.sympy.org/latest/guide.html",
  note = "\url{https://web.archive.org/web/20200403130424/https://docs.sympy.org/latest/guide.html} [Online; accessed 18-December-2021]"
}

@misc{pylint:docs,
  author = {Robert Kirkpatrick},
  title = {A Beginner's Guide to Code Standards in Python - Pylint Tutorial},
  year = {2016},
  url = "https://docs.pylint.org/en/1.6.0/tutorial.html",
  note="\url{https://docs.pylint.org/en/1.6.0/tutorial.html} [Online; accessed 18-December-2021]"
}

https://radon.readthedocs.io/en/latest/commandline.html#the-raw-command
The equation sloc+multi+singlecomments+blank=loc should always hold.
@misc{radon:docs,
  author = {Michele Lacchia},
  title = {Radon 4.1.0 Documentation}, 
  year = {2020},
  url = "https://radon.readthedocs.io/en/latest/commandline.html#the-raw-command",
  note = "\url{https://radon.readthedocs.io/en/latest/commandline.html#the-raw-command} [Online; accessed 19-April-2022]"
}

% =============================================================================
% =  Code Repositories
% =============================================================================

@misc{data:munki,
  author = {Munki contributors},
  title = {Munki},
  year = {2021},
  url = "https://github.com/munki/munki",
  note="\url{https://github.com/munki/munki} [Online; accessed 17-December-2021]"
}

@misc{data:raven-python,
  author = {Sentry contributors},
  title = {Sentry},
  year = {2021},
  url = "https://github.com/getsentry/raven-python",
  note="\url{https://github.com/getsentry/raven-python} [Online; accessed 18-December-2021]"
}

@misc{data:elastalert,
  author = {ElastAlert contributors},
  title = {ElastAlert},
  year = {2021},
  url = "https://github.com/Yelp/elastalert",
  note="\url{https://github.com/Yelp/elastalert} [Online; accessed 18-December-2021]"
}

@misc{data:ansible,
  author = {Ansible contributors},
  title = {Ansible},
  year = {2021},
  url = "https://github.com/ansible/ansible",
  note="\url{https://github.com/ansible/ansible} [Online; accessed 17-December-2021]"
}

@misc{data:sympy,
  author = {SymPy contributors},
  title = {SymPy},
  year = {2021},
  url = "https://github.com/sympy/sympy",
  note = "\url{https://github.com/sympy/sympy} [Online; accessed 18-December-2021]"
}

@misc{data:salt,
  author = {Salt contributors},
  title = {Salt},
  year = {2021},
  url = "https://github.com/saltstack/salt",
  note = "\url{https://github.com/saltstack/salt} [Online; accessed 18-December-2021]"
}

@misc{data:scrapy,
  author = {Scrapy contributors},
  title = {Scrapy},
  year = {2021},
  url = "https://github.com/scrapy/scrapy",
  note = "\url{https://github.com/scrapy/scrapy} [Online; accessed 23-April-2022]"
}

@misc{data:numba,
  author = {Numba contributors},
  title = {Numba},
  year = {2022},
  url = "https://github.com/numba/numba",
  note = "\url{https://github.com/numba/numba} [Online; accessed 23-April-2022]"
}

@misc{data:cython,
  author = {Cython contributors},
  title = {Cython},
  year = {2022},
  url = "https://github.com/cython/cython",
  note = "\url{https://github.com/cython/cython} [Online; accessed 23-April-2022]"
}

@misc{data:youtube-dl,
  author = {YouTube-DL contributors},
  title = {YouTube-DL},
  year = {2022},
  url = "https://github.com/rg3/youtube-dl",
  note = "\url{https://github.com/rg3/youtube-dl} [Online; accessed 23-April-2022]"
}

@misc{data:electrum,
  author = {Electrum contributors},
  title = {Electrum - Lightweight Bitcoin client},
  year = {2022},
  url = "https://github.com/spesmilo/electrum",
  note = "\url{https://github.com/spesmilo/electrum} [Online; accessed 23-April-2022]"
}

% =============================================================================
% =  Wikipedia
% =============================================================================

@misc{wiki:software-evolution,
  author = {Wikipedia contributors},
  title = "Software evolution --- {W}ikipedia{,} The Free Encyclopedia",
  year = "2021",
  url = "https://en.wikipedia.org/wiki/Software_evolution",
  note="\url{https://en.wikipedia.org/wiki/Software_evolution} [Online; accessed 12-December-2021]"
}

@misc{wiki:software-maintenance,
  author = {Wikipedia contributors},
  title = "Software maintenance --- {W}ikipedia{,} The Free Encyclopedia",
  year = "2021",
  url = "https://en.wikipedia.org/wiki/Software_maintenance",
  note="\url{https://en.wikipedia.org/wiki/Software_maintenance} [Online; accessed 17-December-2021]"
}

@misc{wiki:code-smells,
  author = {Wikipedia contributors},
  title = "Code smell --- {W}ikipedia{,} The Free Encyclopedia",
  year = "2021",
  url = "https://en.wikipedia.org/wiki/Code_smell",
  note="\url{https://en.wikipedia.org/wiki/Code_smell} [Online; accessed 18-December-2021]"
}

@misc{wiki:lehmans-laws,
  author = {Wikipedia contributors},
  title = {Lehman's laws of software evolution},
  year = {2021},
  url = "https://en.wikipedia.org/wiki/Lehman%27s_laws_of_software_evolution",
  note="\url{https://en.wikipedia.org/wiki/Lehman%27s_laws_of_software_evolution} [Online; accessed 12-December-2021]"
}
